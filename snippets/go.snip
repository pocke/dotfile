snippet     fmain
abbr        func main(){...}
options     head
  func main() {
    ${0:TARGET}
  }

snippet     init
abbr        func init(){...}
options     head
  func init() {
    ${0:TARGET}
  }

snippet     const
abbr        const ()
options     head
  const (
    ${0:TARGET}
  )

snippet     var
abbr        var () 
options     head
  var (
    ${0:TARGET}
  )

snippet     go
abbr        go func(){...}()
options     head
  go func() {
    ${0:TARGET}
  }()

snippet     method
abbr        func(...) ...() () {}
options     head
  func (${1:#:receiver} ${2:int}) ${3:fname}(${4}) ${5:int }{
    ${0:TARGET:return }
  }

snippet     test
options     head
  package ${0:#:NAME}

  import (
    "testing"
  )

  ${0:TARGET}

snippet     lambda
abbr        func () { ... }
options     word
  func (${1}) ${2:#:int }{
    ${0:TARGET:return }
  }

snippet     if
options     head
  if ${1:err != nil} {
      ${0:return err}
  }
